<post>
  <author>BaronVSS</author>
  <date>2020-08-02T12:35:17Z</date>
  <link>/r/TheMotte/comments/hym5xb/culture_war_roundup_for_the_week_of_july_27_2020/g037isi/</link>
  <title>Why Websites Suck</title>
  <body>
    <div class="md">
      <p>Backend/periodic reluctant frontend developer here, I would attribute the general shittyness of the internet to a couple a three things:</p>
      <p>1) </p>
      <p>The internet is now thoroughly commodified and gameified by companies who seek to hijack your brain's reward system and harvest information about your browsing habbits and personal data. Your own comments about reddit highlight something that annoys the shit out of me about the new interface. It is not actually designed to provide you with the information you seek. It is designed to encourage you to endlessly skim through things. The more things you click on, the more of an idea reddit has as to who you are. There's money to be had in data harvesting, but little to be had in quality of life improvements. There's a whole host of things about our platform that we would like to fix, but other, more lucrative things keep being prioritized ahead of it.</p>
      <p>2) </p>
      <p>A number of the sites you describe have what I like to call captive audiences. They can strip out and break or ""improve"" (worsen) features on a dime and people might grumble, but where else are you gonna go?</p>
      <p>At my place of work, we use a site called Jira to manage the work required by the business. Jira is an anus destroying experience to try and use. It will happily interpret clicks as drags and vice versa, has the responsiveness of a sleeping elderly king charles spaniel and finding things is an exercise in trying to trick the system in displaying the thing you want it to display. </p>
      <p>Despite this, we are still on Jira. We will probably still be on Jira until the company gets folded up or merges into the singularity. All of our stuff is on there, everyone knows how to use it, and disengaging would be a significant amount of work to sign up with a competitor that, considering the web in general, might not be an improvement. </p>
      <p>The same is true of anything else.  You could make the best YouTube competitor ever, but as long as the userbase is low or populated by witches (and popular search engines will ensure that your competitor cannot be found regardless), it will still be a ghost town. YouTube can rip out annotations and ban everything that's not a cat video or makeup tutorial and no one would care, because it would still be the pre-eminent video site on the internet. As to your point about broken features, we had a feature that never worked in prod for about a year and it took us a year for someone to stumble into it and take the effort to raise a bug.</p>
      <p>3) </p>
      <p>The (absolute) state of frontend development. A typical webpage, such as the one you're reading now, is comprised of 3 elements: HTML, which contains the page's content and structure, CSS which makes the layout look <em>pretty</em> and Javascript, which makes the page respond to the user's inputs. </p>
      <p>Back in the olden days, HTML files rendered by the server would make up a chunk of the page you viewed, CSS would take up another chunk and there would be a little bit of JS to enable certain features without having to query the server again to give you another page. More recently, the prevalence and complexity of the CSS has increased significantly and the prevalence of the JS now completely dwarfs the other two. </p>
      <p>There is a certain visual and functional standard that modern websites must adhere to, if not by customers then by clients, the higher ups, external companies, and other people who have wildly differing priorities, many of which are the result of 1. <a href="https://idlewords.com/talks/website_obesity.html">The website obesity crisis covers the bloat quite well and how this bloat will hinder your internet using experience</a>, but I'd like to go a bit further and explain why the ginormo JS is kind of a big problem for actually getting work done.</p>
      <p>Javascript was dreamt up by Brendan Eich in two weeks while he was on coke, and was absolutely not designed to do the sorts of things people use it for now.</p>
      <p>Let me tell you about Node Package Manager. I hate Node Package Manager. When I need to use it, I try and use as little of it as possible. Put very simply, NPM allows you to download other people's Javascript libraries, modules and APIs and integrate them into your own work. This is quite useful for when you just need a simple slider or ad widget and don't want to re-invent the wheel, but this comes at a terrible price. That slider or ad widget could depend on a fix to make padding consistent across all browsers, and that fix could depend upon a library designed to make working with arrays easier, and that library could depend upon three other modules. </p>
      <p>You end up in dependency hell where you have to jump through endless hoops to get something to work, where you don't know how large parts of your application actually work and your application is at risk of falling over when someone <a href="https://www.theregister.com/2016/03/23/npm_left_pad_chaos/">pulls out the plug</a>. </p>
      <p>If there is an issue at any point in the tree, you are entirely at the mercy of someone else to fix it. There have been a number of times where the frontend team found an issue with a dependency they were using, went to the github of the dependency's author, then left an issue and they either got no response, were told it wasn't an issue or got a fix for it about 6 months later but we can't use that fix because the new version or dependency then breaks a bunch of other things. I could write a whole fucking essay on why modern JS is a mistake but it's growing to be longer than every other section combined, so I'll just leave it there.</p>
      <p>4) </p>
      <p>The invention of the smartphone has just accelerated the issues in every other point, <sup>as well as ensuring the eternal September truly is eternal</sup>. You may have noticed that <a href="https://modus.medium.com/on-the-visual-weariness-of-the-web-8af1c969ce73">all websites are the same</a>. Mobiles are mostly to blame for this. Designing and writing for the wide berth in screen sizes is quite hard, so most devs come up with a mobile design first, and then expand it to fit actual computer resolutions since that's much easier than doing it the other way round. This is why on many news/essay type websites the text of the article is placed in the center and you just have white space on either side, because on a phone that white space would be compressed into nothing and the top bar would be compressed into a hamburger menu, and all interactable elements are styled as being generic blobby buttony things rather than buttons or images or links or whatever they actually are underneath.</p>
      <p>Mobile now makes up a majority of all internet use. This is troublesome because the average phone user is... quite willing to overlook things. From my own observations, the average user likes being spied on. They don't seem to care that their website doesn't fucking work correctly. They tolerate the fact their website takes 3+ seconds to load and render. They'd prefer using shiny pretty new thing over horrible looking old thing when horrible looking old thing is more functional and performative. They will merrily tap on clickbait and feed the machine instead of disconnecting.</p>
      <p>tl;dr, perverse incentives, sunken costs, tech being made to do things it wasn't really designed to do, the median user of the internet having no standards</p>
      <p>thank you for reading, please like and subscribe to my ted talk</p>
    </div>
  </body>
</post>